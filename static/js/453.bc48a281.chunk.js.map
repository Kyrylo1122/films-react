{"version":3,"file":"static/js/453.bc48a281.chunk.js","mappings":"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","sources":["API/fetchAPI.js","Genres/listOFGenres.mjs","Genres/GetGenres.js","Components/Main/CardTemplate/CardTemplate.js","Components/Pagination/Pagination.js","Components/Main/FilmsGallery/FilmsGallery.js","Components/Main/Titles/Titles.js","Components/Main/Main.js"],"sourcesContent":["import axios from \"axios\";\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/\";\r\nconst API_KEY = \"9b627b5c13f01f3f3d8206e8b910ae85\";\r\n\r\nexport async function fetchFilms(page = 1) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `/3/trending/movie/week?api_key=${API_KEY}&page=${page}`\r\n    );\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(\"Something gone wrong\", error);\r\n  }\r\n}\r\n\r\nexport async function searchedQuery(query, page = 1) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(\"Something gone wrong\", error);\r\n  }\r\n}\r\n\r\nexport async function fullFilmInformation(movie_id) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `/3/movie/${movie_id}?api_key=${API_KEY}&language=en-US`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(\"Something gone wrong\", error);\r\n  }\r\n}\r\n","export const genres = [\r\n  { id: 28, name: \"Action\" },\r\n  { id: 12, name: \"Adventure\" },\r\n  { id: 16, name: \"Animation\" },\r\n  { id: 35, name: \"Comedy\" },\r\n  { id: 80, name: \"Crime\" },\r\n  { id: 99, name: \"Documentary\" },\r\n  { id: 18, name: \"Drama\" },\r\n  { id: 10751, name: \"Family\" },\r\n  { id: 14, name: \"Fantasy\" },\r\n  { id: 36, name: \"History\" },\r\n  { id: 27, name: \"Horror\" },\r\n  { id: 10402, name: \"Music\" },\r\n  { id: 9648, name: \"Mystery\" },\r\n  { id: 10749, name: \"Romance\" },\r\n  { id: 878, name: \"Science Fiction\" },\r\n  { id: 10770, name: \"TV Movie\" },\r\n  { id: 53, name: \"Thriller\" },\r\n  { id: 10752, name: \"War\" },\r\n  { id: 37, name: \"Western\" },\r\n];\r\n","import { genres } from \"./listOFGenres.mjs\";\r\n\r\nexport function getGenreName(id) {\r\n  let searchedId;\r\n  if (id.id) {\r\n    searchedId = id.id;\r\n  } else {\r\n    searchedId = id;\r\n  }\r\n  const genre = genres.find((res) => res.id === searchedId);\r\n  return genre.name;\r\n}\r\nexport function getGenres(allIdGenres) {\r\n  return allIdGenres\r\n    .map((genre) => {\r\n      return getGenreName(genre);\r\n    })\r\n    .splice(0, 2)\r\n    .join(\", \");\r\n}\r\n","import { getGenres } from \"../../../Genres/GetGenres\";\r\nimport NoFoundPoster from \"../../../images/not_found.png\";\r\n\r\nimport \"./CardTemplate.css\";\r\nexport default function CardTemplate({ film, watched }) {\r\n  const { poster_path, title, release_date, genre_ids } = film;\r\n  const releaseDate = release_date?.slice(0, 4);\r\n  let allGenres = getGenres(genre_ids);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card__container\">\r\n        <div className=\"card__img--container\">\r\n          <img\r\n            src={\r\n              poster_path\r\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\r\n                : NoFoundPoster\r\n            }\r\n            loading=\"lazy\"\r\n            alt={title}\r\n            className=\"card__img\"\r\n            width=\"100\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"card__meta meta\">\r\n        <p className=\"meta__title\"> {title}</p>\r\n        <ul className=\"meta__list list\">\r\n          <li className=\"meta__item meta__item--genres\"> {allGenres}</li>\r\n          <li className=\"meta__item\"> {releaseDate}</li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import ReactPaginate from \"react-paginate\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addPage } from \"../../Redux/GallerySlice\";\r\nimport \"./Pagination.css\";\r\n\r\nexport default function PaginatedItems({ pages }) {\r\n  const dispatch = useDispatch();\r\n  const page = useSelector((state) => state.gallery.page);\r\n\r\n  const handlePageClick = (event) => {\r\n    dispatch(addPage(event.selected + 1));\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination__container\">\r\n      <ReactPaginate\r\n        nextLabel=\"next >\"\r\n        onPageChange={handlePageClick}\r\n        pageRangeDisplayed={5}\r\n        marginPagesDisplayed={0}\r\n        selectedPageRel={null}\r\n        forcePage={page - 1}\r\n        pageCount={pages}\r\n        previousLabel=\"< previous\"\r\n        renderOnZeroPageCount={null}\r\n        containerClassName=\"pagination\"\r\n        pageLinkClassName=\"pagination__num\"\r\n        previousLinkClassName=\"pagination__num\"\r\n        nextLinkClassName=\"pagination__num\"\r\n        activeLinkClassName=\"pagination__active\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { fetchFilms, searchedQuery } from \"../../../API/fetchAPI\";\r\nimport CardTemplate from \"../CardTemplate/CardTemplate\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchFilmGallery, addSelectedId } from \"../../../Redux/GallerySlice\";\r\nimport PaginatedItems from \"../../Pagination/Pagination\";\r\nimport \"./FilmsGallery.css\";\r\nimport Loader from \"../../Loader/Loader\";\r\n\r\nimport \"../../Backdrop/Backdrop.css\";\r\n\r\nexport default function PopularFilmsGallery({ openModal }) {\r\n  const [pages, setPages] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const films = useSelector((state) => state.gallery.filmGallery);\r\n  const activePage = useSelector((state) => state.gallery.page);\r\n  const query = useSelector((state) => state.gallery.query);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    if (query !== \"\") {\r\n      try {\r\n        searchedQuery(query, activePage)\r\n          .then((data) => {\r\n            dispatch(fetchFilmGallery(data.results));\r\n            setPages(data.total_pages);\r\n          })\r\n          .finally(() => setLoading(false));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      try {\r\n        fetchFilms(activePage)\r\n          .then((data) => {\r\n            dispatch(fetchFilmGallery(data.results));\r\n            setPages(data.total_pages);\r\n          })\r\n          .finally(() => setLoading(false));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }, [activePage, dispatch, query]);\r\n  if (loading) {\r\n    return (\r\n      <div className=\"backdrop\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n  if (films.length === 0) {\r\n    return <h1>Oops, there are no movies with that name :(</h1>;\r\n  }\r\n  return (\r\n    <div>\r\n      <ul className=\"films-gallery__list\">\r\n        {films.map((film) => {\r\n          return (\r\n            <li\r\n              className=\"films-gallery__item\"\r\n              key={film.id}\r\n              onClick={() => {\r\n                dispatch(addSelectedId(film.id));\r\n                openModal();\r\n              }}\r\n            >\r\n              <CardTemplate film={film} />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <PaginatedItems items={films} pages={pages} />\r\n    </div>\r\n  );\r\n}\r\n","import \"./Titles.css\";\r\nexport function PopularFilmsTitle() {\r\n  return <h1 className=\"title\">What is popular right now:</h1>;\r\n}\r\n\r\nexport function SearchedFilmsTitle({ query }) {\r\n  return (\r\n    <h1 className=\"title\">\r\n      You are searching: <span>{query}</span>\r\n    </h1>\r\n  );\r\n}\r\n","import { useState, lazy, Suspense } from \"react\";\r\nimport \"./Main.css\";\r\nimport FilmsGallery from \"./FilmsGallery/FilmsGallery\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { PopularFilmsTitle, SearchedFilmsTitle } from \"./Titles/Titles\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nconst Modal = lazy(() => import(\"../Modal/Modal\"));\r\n\r\nexport default function Main() {\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n  const query = useSelector((state) => state.gallery.query);\r\n  const openModal = () => setIsOpenModal(true);\r\n  const closeModal = () => setIsOpenModal(false);\r\n\r\n  return (\r\n    <section className=\"main\">\r\n      <div className=\"container\">\r\n        {query === \"\" ? (\r\n          <PopularFilmsTitle />\r\n        ) : (\r\n          <SearchedFilmsTitle query={query} />\r\n        )}\r\n        <FilmsGallery openModal={openModal} />\r\n        {isOpenModal && (\r\n          <Suspense fallback={<Loader />}>\r\n            <Modal closeModal={closeModal} />\r\n          </Suspense>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"names":["axios","API_KEY","fetchFilms","page","data","Error","searchedQuery","query","fullFilmInformation","movie_id","genres","id","name","getGenres","allIdGenres","map","genre","searchedId","find","res","getGenreName","splice","join","CardTemplate","film","poster_path","watched","title","release_date","genre_ids","releaseDate","slice","allGenres","className","src","NoFoundPoster","loading","alt","width","PaginatedItems","pages","dispatch","useDispatch","useSelector","state","gallery","nextLabel","onPageChange","event","addPage","selected","pageRangeDisplayed","marginPagesDisplayed","selectedPageRel","forcePage","pageCount","previousLabel","renderOnZeroPageCount","containerClassName","pageLinkClassName","previousLinkClassName","nextLinkClassName","activeLinkClassName","PopularFilmsGallery","openModal","useState","setPages","setLoading","films","filmGallery","activePage","useEffect","then","fetchFilmGallery","results","total_pages","finally","error","console","log","Loader","length","onClick","addSelectedId","items","PopularFilmsTitle","SearchedFilmsTitle","Modal","lazy","Main","isOpenModal","setIsOpenModal","Suspense","fallback","closeModal"],"sourceRoot":""}