{"version":3,"file":"static/js/995.61b2f019.chunk.js","mappings":"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","sources":["Components/GetModalGenres/GetModalGenres.js","Components/MyLibrary/EmptyLibrary/EmptyLibrary.js","Components/MyLibrary/LibraryBtn/LibraryBtn.js","Components/MyLibrary/Watched/Watched.js","Components/MyLibrary/LibraryCardTemplate/LibraryCardTemplate.js","Components/MyLibrary/LibraryCard/LibraryCard.js","Components/MyLibrary/LibraryWithFilms/LibraryWithFilms.js","Components/MyLibrary/Library.js"],"sourcesContent":["const getModalGenres = (array) => {\r\n  return array.map((item) => item.name).join(\", \");\r\n};\r\nexport default getModalGenres;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addQuery } from \"../../../Redux/GallerySlice\";\r\n\r\nexport default function EmptyLibrary() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <h2 className=\"library__title\">\r\n        Your library is <span>empty.</span> Let's add something!\r\n      </h2>\r\n      <Link\r\n        to=\"/main\"\r\n        onClick={() => {\r\n          dispatch(addQuery(\"\"));\r\n        }}\r\n        className=\"library__link\"\r\n      >\r\n        What is popular right now?\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport { deleteFilmAtMyLibrary } from \"../../../Redux/GallerySlice\";\r\nimport \"./LibraryBtn.css\";\r\nexport default function LibraryBtn({ isWatched, onClick, film }) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <ul className=\"library-btn__list\">\r\n      <li className=\"library-btn__item\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn--active  library-btn__btn\"\r\n          onClick={() => onClick()}\r\n        >\r\n          {isWatched ? \"Reset\" : \"Watched\"}\r\n        </button>\r\n      </li>\r\n      <li className=\"library-btn__item\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn--regular library-btn__btn\"\r\n          onClick={() => {\r\n            dispatch(deleteFilmAtMyLibrary(film.id));\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n","import \"./Watched.css\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function Watched() {\r\n  const transition = { type: \"spring\", duration: 1 };\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -100 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={transition}\r\n      className=\"watched__container\"\r\n    >\r\n      <h2 className=\"watched__title\">watched</h2>\r\n    </motion.div>\r\n  );\r\n}\r\n","import NoFoundPoster from \"../../../images/not_found.png\";\r\nimport getModalGenres from \"../../GetModalGenres/GetModalGenres\";\r\nimport Watched from \"../Watched/Watched\";\r\n\r\nexport default function LibraryCardTemplate({ film, watched }) {\r\n  const { poster_path, title, release_date, genres } = film;\r\n\r\n  const releaseDate = release_date?.slice(0, 4);\r\n\r\n  const allGenres = getModalGenres(genres);\r\n  return (\r\n    <>\r\n      <div className=\"card__container\">\r\n        <div className=\"card__img--container\">\r\n          <img\r\n            src={\r\n              poster_path\r\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\r\n                : NoFoundPoster\r\n            }\r\n            loading=\"lazy\"\r\n            alt={title}\r\n            className=\"card__img\"\r\n            width=\"100\"\r\n          />\r\n          {watched && <Watched />}\r\n        </div>\r\n      </div>\r\n      <div className=\"card__meta meta\">\r\n        <p className=\"meta__title\"> {title}</p>\r\n        <ul className=\"meta__list list\">\r\n          <li className=\"meta__item meta__item--genres\">{allGenres}</li>\r\n          <li className=\"meta__item\"> {releaseDate}</li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport LibraryBtn from \"../LibraryBtn/LibraryBtn\";\r\nimport LibraryCardTemplate from \"../LibraryCardTemplate/LibraryCardTemplate\";\r\n\r\nexport default function LibraryCard({ film }) {\r\n  const [watched, setWatched] = useState(false);\r\n\r\n  const toggleWatchedFilm = () => setWatched((state) => !state);\r\n\r\n  return (\r\n    <div>\r\n      <LibraryCardTemplate film={film} watched={watched} />\r\n      <LibraryBtn isWatched={watched} onClick={toggleWatchedFilm} film={film} />\r\n    </div>\r\n  );\r\n}\r\n","import LibraryCard from \"../LibraryCard/LibraryCard\";\r\n\r\nexport default function LibraryWithFilms({ films }) {\r\n  return (\r\n    <>\r\n      <h1 className=\"library__title\">My Library:</h1>\r\n      <ul className=\"films-gallery__list\">\r\n        {films.map((film) => {\r\n          return (\r\n            <li key={film.id} className=\"films-gallery__item library__item\">\r\n              <LibraryCard film={film} />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport \"../Main/FilmsGallery/./FilmsGallery.css\";\r\nimport EmptyLibrary from \"./EmptyLibrary/EmptyLibrary\";\r\nimport \"./Library.css\";\r\nimport LibraryWithFilms from \"./LibraryWithFilms/LibraryWithFilms\";\r\n\r\nexport default function Library() {\r\n  const myLibraryArray = useSelector((state) => state.gallery.myLibrary);\r\n  return (\r\n    <section className=\"main\">\r\n      <div className=\"container\">\r\n        {myLibraryArray.length === 0 ? (\r\n          <EmptyLibrary />\r\n        ) : (\r\n          <LibraryWithFilms films={myLibraryArray} />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"names":["array","map","item","name","join","EmptyLibrary","dispatch","useDispatch","className","to","onClick","addQuery","LibraryBtn","isWatched","film","type","deleteFilmAtMyLibrary","id","Watched","motion","initial","opacity","y","animate","exit","transition","duration","LibraryCardTemplate","watched","poster_path","title","release_date","genres","releaseDate","slice","allGenres","getModalGenres","src","NoFoundPoster","loading","alt","width","LibraryCard","useState","setWatched","state","LibraryWithFilms","films","Library","myLibraryArray","useSelector","gallery","myLibrary","length"],"sourceRoot":""}