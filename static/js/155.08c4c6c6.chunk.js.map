{"version":3,"file":"static/js/155.08c4c6c6.chunk.js","mappings":"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","sources":["Components/GetModalGenres/GetModalGenres.js","Components/Modal/ModalFilmInfo/ModalFilmIfo.js","Components/Modal/Modal.js"],"sourcesContent":["const getModalGenres = (array) => {\r\n  return array.map((item) => item.name).join(\", \");\r\n};\r\nexport default getModalGenres;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fullFilmInformation } from \"../../../API/fetchAPI\";\r\nimport { addFilmToMyLibrary } from \"../../../Redux/GallerySlice\";\r\nimport NoFoundPoster from \"../../../images/not_found.png\";\r\nimport getModalGenres from \"../../GetModalGenres/GetModalGenres\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loader from \"../../Loader/Loader\";\r\n\r\nimport \"./ModalFilmInfo.css\";\r\n\r\nexport default function ModalFilmIfo() {\r\n  const [film, setFilm] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const myLibraryFilms = useSelector((state) => state.gallery.myLibrary);\r\n\r\n  const selectedId = useSelector((state) => state.gallery.selectedId);\r\n  const dispatch = useDispatch();\r\n\r\n  const addFilm = () => {\r\n    const filmIndex = myLibraryFilms.findIndex((item) => item.id === film.id);\r\n    if (filmIndex !== -1) {\r\n      return toast(\"Film already in library\");\r\n    }\r\n    const genre_ids = film.genres.map((genre) => genre.id);\r\n    dispatch(addFilmToMyLibrary({ ...film, genre_ids }));\r\n    return toast(`We add ${film.title} to My library`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    try {\r\n      fullFilmInformation(selectedId)\r\n        .then((data) => setFilm(data))\r\n        .finally(() => setLoading(false));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [selectedId]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n  if (!film) {\r\n    return;\r\n  }\r\n  const {\r\n    poster_path,\r\n    title,\r\n    vote_average,\r\n    vote_count,\r\n    popularity,\r\n    original_title,\r\n    genres,\r\n    overview,\r\n  } = film;\r\n  const allGenres = getModalGenres(genres);\r\n\r\n  return (\r\n    <ul className=\"modal__list\">\r\n      <li className=\"modal__item modal__item--top\">\r\n        <div className=\"modal-card--top\">\r\n          <img\r\n            src={\r\n              poster_path\r\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\r\n                : NoFoundPoster\r\n            }\r\n            alt={original_title}\r\n            className=\"film__img\"\r\n          />\r\n        </div>\r\n      </li>\r\n      <li className=\"modal__item \">\r\n        <div className=\"modal-card--bottom\">\r\n          <h2 className=\"film__title\">{title}</h2>\r\n          <ul className=\"film__list \">\r\n            <li className=\"film__items\">\r\n              <p className=\"film__items-text\">Vote / Votes:</p>\r\n              <div>\r\n                <span className=\"film__span--vote\">{vote_average}</span>\r\n                <span className=\"film__span\"> / {vote_count}</span>\r\n              </div>\r\n            </li>\r\n            <li className=\"film__items\">\r\n              <p className=\"film__items-text\">Popularity:</p>\r\n              <span className=\"film__span\">{popularity}</span>\r\n            </li>\r\n            <li className=\"film__items\">\r\n              <p className=\"film__items-text\">Original Title:</p>\r\n              <span className=\"film__span\">{original_title}</span>\r\n            </li>\r\n            <li className=\"film__items\">\r\n              <p className=\"film__items-text\">Genre:</p>\r\n              <span className=\"film__span\">{allGenres} </span>\r\n            </li>\r\n          </ul>\r\n          <h3 className=\"film__about\">About</h3>\r\n          <p className=\"film__description\">{overview}</p>\r\n\r\n          <button type=\"button\" className=\"btn btn--active\" onClick={addFilm}>\r\n            Add to My Library\r\n          </button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n","import \"./Modal.css\";\r\nimport ModalFilmIfo from \"./ModalFilmInfo/ModalFilmIfo\";\r\nimport { ImCross } from \"react-icons/im\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function Modal({ closeModal }) {\r\n  useEffect(() => {\r\n    const Escape = (e) => {\r\n      \r\n\r\n      if (e.code === \"Escape\") {\r\n        closeModal();\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", Escape);\r\n\r\n    return () => window.removeEventListener(\"keydown\", Escape);\r\n  });\r\n\r\n  const handleClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      closeModal();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"backdrop\" onClick={handleClick}>\r\n      <div className=\"modal\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            closeModal();\r\n          }}\r\n          className=\"modal__close-btn\"\r\n        >\r\n          <ImCross color=\"inherit\" size=\"1.5rem\" />\r\n        </button>\r\n        <ModalFilmIfo />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["array","map","item","name","join","ModalFilmIfo","useState","film","setFilm","loading","setLoading","myLibraryFilms","useSelector","state","gallery","myLibrary","selectedId","dispatch","useDispatch","useEffect","fullFilmInformation","then","data","finally","error","console","log","Loader","poster_path","title","vote_average","vote_count","popularity","original_title","genres","overview","allGenres","getModalGenres","className","src","NoFoundPoster","alt","type","onClick","findIndex","id","toast","genre_ids","genre","addFilmToMyLibrary","Modal","closeModal","Escape","e","code","window","addEventListener","removeEventListener","currentTarget","target","color","size"],"sourceRoot":""}